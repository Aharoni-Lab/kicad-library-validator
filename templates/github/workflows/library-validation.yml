name: KiCad Library Validation

on:
  pull_request:
    paths:
      - 'symbols/**'
      - 'footprints/**'
      - '3dmodels/**'
      - 'docs/**'
      - 'structure.yaml'
      - '.github/workflows/library-validation.yml'
  push:
    branches:
      - main
    paths:
      - 'symbols/**'
      - 'footprints/**'
      - '3dmodels/**'
      - 'docs/**'
      - 'structure.yaml'
      - '.github/workflows/library-validation.yml'

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for checking file changes

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install KiCad Library Validator
        run: |
          python -m pip install --upgrade pip
          pip install git+https://github.com/Aharoni-Lab/kicad-library-validator.git

      - name: Generate Library Report
        id: report
        run: |
          python -m kicad_lib_validator.utils.generate_report . --verbose > report_output.txt
          echo "report_content<<EOF" >> $GITHUB_OUTPUT
          cat report_output.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate Library Tables
        id: tables
        run: |
          # Run generate_library_tables and capture output
          python -m kicad_lib_validator.utils.generate_library_tables structure.yaml --verbose > tables_output.txt
          
          # Check if any files were modified
          if git diff --quiet tables/; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "tables_output<<EOF" >> $GITHUB_OUTPUT
            cat tables_output.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            let comment = '## Library Validation Report\n\n' + '${{ steps.report.outputs.report_content }}';
            
            if ('${{ steps.tables.outputs.changes }}' === 'true') {
              comment += '\n\n## Library Tables Update\n\n';
              comment += 'The following changes were made to the library tables:\n\n';
              comment += '${{ steps.tables.outputs.tables_output }}';
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

      - name: Commit Table Changes
        if: steps.tables.outputs.changes == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add tables/
          git commit -m "Update library tables [skip ci]"
          git push 